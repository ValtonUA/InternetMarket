@model InternetMarket.Web.Models.CreateOrEditProductVM

@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Product", FormMethod.Post, new { onsubmit = "return SubmitForm(this)"}))
{
    @Html.AntiForgeryToken()
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.OldProductName)
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"><i class="far fa-sticky-note"></i></span>
                @Html.EditorFor(
                    model => model.ProductName,
                    new { htmlAttributes = new { @class = "form-control", @style = "min-width: 100%;" } })
            </div>
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"><i class="fas fa-file-signature"></i></span>
                @Html.EditorFor(
                    model => model.Description,
                    new { htmlAttributes = new { @class = "form-control", @style = "min-width: 100%;" } })
            </div>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"><i class="fas fa-caret-square-down"></i></span>
                @Html.DropDownListFor(
                    model => model.Category,
                    new SelectList(ViewBag.Categories, "CategoryName", "CategoryName"),
                    new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon">$</span>
                @Html.EditorFor(
                    model => model.Price, 
                    new { htmlAttributes = new { @class = "form-control", @style = "min-width: 100%;" } })
            </div>
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" />
            <input type="reset" value="Reset" class="btn btn-primary"/>
        </div>

}
